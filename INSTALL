#!/usr/bin/perl
#
# This script sets up a FIFO of all messages collected by syslog.  To make
# syslog write all its logs to the FIFO /etc/syslog.conf is modified.
#
# In OpenBSD the script adds a new table to /etc/pf.conf
#    table <crackers> { }
#
# In Linux no other steps are done.
#
# Next the config file is installed as /etc/logrun.conf and then modified
# according to the local firewall setup.
#
# On OpenBSD pfctl is setup:
#    $ipv4_firewall = "/sbin/pfctl -t crackers -T add ";
#    $ipv6_firewall = $ipv4_firewall;
#
# On Linux shorewall, iptables or ipchains is setup, e.g.:
#    $ipv4_firewall = /sbin/shorewall drop ";
#    $ipv6_firewall = $ipv4_firewall;
#
#
$| = 1;

$system=`uname`;

if($system =~ /Linux/) {
  $YOURSYSTEM = 1;
  print "\nYour system: $system\n";
} elsif ($system =~ /OpenBSD/) {
  $YOURSYSTEM = 2;
  print "\nYour system: $system\n";
} else {
  print "This setup file can't install logrun on Your $system system !!!\n";
  print "Read INSTALL file and do it manually!\n\n";
  exit(1);
}

if ( ! -d "/var/lib/logrun") { 
  system("mkdir /var/lib/logrun") == 0 or die("Can't create directory /var/lib/logrun: $!\nYou should be root now!!!\n");
}
if ( ! -p "/var/lib/logrun/FIFO") { 
  print "I'm creating /var/lib/logrun/FIFO file: ";
  system("mkfifo /var/lib/logrun/FIFO") == 0 or die("Can't create /var/lib/logrun/FIFO file: $!\nYou should be root now!!!\n");
  print "OK\n";
}
system("chmod 600 /var/lib/logrun/FIFO") == 0 or die("Can't change /var/lib/logrun/FIFO mode for 600: $!\n\n");

if (system("grep /var/lib/logrun/FIFO /etc/syslog.conf > /dev/null" )) {
  print "I'm changing Your syslog: ";
  if(open(SYSLOG, ">>/etc/syslog.conf") != 0) {
    print SYSLOG "\nauth,authpriv.*\t\t\t|/var/lib/logrun/FIFO\n";
    close(SYSLOG);
    print "OK\n";
    print "I'm reloading Your syslogd: ";
#    system("ps ax|grep syslog|grep -v grep|awk \'\{system\(\"kill -1 \"\$1\)\}\'");
    system("/etc/init.d/sysklogd restart");
  } else {
    print "FAILED!!! - change Your syslog.conf file manually and add there line:\n\tauth,authpriv.*\t\t\t|/var/lib/logrun/FIFO\n";
  }
} else {
  print "No need to change syslog.conf\n";
}

if($YOURSYSTEM eq "2") {
  #BSD
  print "I'm changing Your /etc/pf.conf: ";
  if(open(PFCONF, ">>/etc/pf.conf") != 0) {
    print PFCONF "\ntable <crackers> \{ \}\n";
    close(PFCONF);
    print "OK\n";
    print "I'm reloading Your PF ( Ctrl+C to stop ) - pfctl -f /etc/pf.conf:";
    sleep(2);
    print ".";
    sleep(2);
    print ".";
    sleep(2);
    print ".";
    sleep(2);
    if(system("/sbin/pfctl -f /etc/pf.conf") == 0) {
      print "OK\n";
    } else {
      print "FAILED!!! - Can't reload Your PF filter\n";
    }
  } else {
    print "FAILED!!! - change Your pf.conf file manually and add there line:\n\ttable\<crackers\> \{ \}\n";
  }
}


system("cp -f -p ./logrun /usr/sbin/logrun");
system("chown root /usr/sbin/logrun") == 0 or print "Can't change ./logrun owner for root: $!\n\n";
system("chmod 700 /usr/sbin/logrun") == 0 or print "Can't change ./logrun mode for 700: $!\n\n";

if ( ! -f "/var/log/logrun") {
  print "I'm creating /var/log/logrun file: ";
  system("touch /var/log/logrun") == 0 or print "Can't touch /var/log/logrun: $!\n\n";
  system("chmod 600 /var/log/logrun") == 0 or print "Can't change /var/log/logrun mode for 600: $!\n\n";
  system("chown root /var/log/logrun") == 0 or print "Can't change /var/log/logrun owner for root: $!\n\n";
  print "OK\n";
} else {
  print "NOTE! /var/log/logrun already exists. Please remove it or assure file contents is sane.\n";
  print "(Next log will probably reveal that)\n";
}

if ( -f "/etc/logrun.conf" ) {
  print "I'm creating a new template /etc/logrun.conf.tmpl file: ";
  print "Please review for new options!\n";
  $filename = "/etc/logrun.conf.tmpl";
} else {
  print "I'm creating the /etc/logrun.conf: ";
  $filename = "/etc/logrun.conf";
}

if($YOURSYSTEM eq "2") {
  #BSD
  if(open(LOGCONF, ">$filename") != 0) {
    print LOGCONF <<EOT;
# Fifo for syslogd to write all logs to.
\$logfile="/var/lib/logrun/FIFO";

# Failed logins database
\$failfile="/var/log/logrun";

#Previously blocked hosts' database
\$blacklist="/var/log/logrun.blacklist";

# Facility for syslog (man syslog.conf)
\$facility="daemon";

# PID file location
\$pidfile="/var/run/logrun.pid";

# Number of times ONE host can try and fail login
\$failedattempts=5;

# Minimum number of days to keep host blocked (0 to disable)
\$blockdays = 88;

#don't add these IP numbers into database - You MUST to add netmask after IP
\@dont_add_into_database = ( "127.0.0.0/255.0.0.0", "192.168.0.0/255.255.255.0");

#at the end of this value func update_iptables adds IP
\$ipv4_firewall="/sbin/pfctl -t crackers -T add ";

#Remove command
\$ipv4_rm_firewall ="/sbin/pfctl -t crackers -T delete ";

##Purge before restart
#\$command_prestart_iptables ="/sbin/pfctl -t crackers -T zero ";

EOT
    print "OK\n";
  } else {
    print "FAILED!!! - copy logrun.conf to /etc/logrun.conf and edit it\n";
  }

  print "I'm changing Your startup scripts: ";
  if(open(RCS, ">>/etc/rc.local") != 0) {
    print RCS "\n/usr/sbin/logrun\n";
    close(RCS);
    print "OK\n";
  } else {
    print "FAILED!!! - change Your startup scripts and add there line:\n";
    print "\t/usr/sbin/logrun\n";
  }
  print "I'm copying man file: ";
  system("cp -f ./logrun.8 /usr/local/man/man8/logrun.8");
  system("chmod 644 /usr/share/man/man8/logrun.8") == 0 or print "Can't change /usr/share/man/man8/logrun.8 mode for 644: $!\n\n";
  system("chown root /usr/share/man/man8/logrun.8") == 0 or print "Can't change /usr/share/man/man8/logrun.8 owner for root: $!\n\n";
  system("chgrp root /usr/share/man/man8/logrun.8") == 0 or print "Can't change /usr/share/man/man8/logrun.8 group for root: $!\n\n";
  print "OK\n";
} else {
  #Linux
  if(open(LOGCONF, ">$filename") != 0) {
    print LOGCONF <<EOT;
# Fifo for syslogd to write all logs to.
\$logfile="/var/lib/logrun/FIFO";

# Failed logins database
\$failfile="/var/log/logrun";

#Previously blocked hosts' database
\$blacklist="/var/log/logrun.blacklist";

# Facility for syslog (man syslog.conf)
\$facility="daemon";

# PID file location
\$pidfile="/var/run/logrun.pid";

# Number of times ONE host can try and fail login
\$failedattempts=4;

# Minimum number of days to keep host blocked (0 to disable)
\$blockdays = 88;

#don't add these IP numbers into database - You MUST to add netmask after IP
\@dont_add_into_database = ( "127.0.0.0/255.0.0.0", "192.168.0.0/255.255.255.0");

#at the end of this value func update_iptables adds IP
\$ipv4_firewall="/sbin/iptables -I INPUT -j DROP -s ";
#\$ipv6_firewall="/sbin/ip6tables -I INPUT -j DROP -s "; # Bug in IP6 handling. (Debian/Sarge)
\$ipv6_firewall=\$ipv4_firewall;

#Remove command
\$ipv4_rm_firewall = "iptables -D INPUT -j DROP -s ";

##Purge before restart
#\$command_prestart_iptables = "iptables -F INPUT";

EOT
    print "OK\n";
  } else {
    print "FAILED!!! - copy logrun.conf to /etc/logrun.conf and edit it\n";
  }

  if ( system("grep /usr/sbin/logrun /etc/init.d/rcS > /dev/null" ) ) {
    print "I'm changing Your startup script (rcS): ";
    if(open(RCS, ">>/etc/init.d/rcS") != 0) {
      print RCS "\n/usr/sbin/logrun\n";
      close(RCS);
      print "OK\n";
    } else {
      print "FAILED!!! - change Your startup scripts and add there lines:\n";
      print "\t/usr/sbin/logrun\n";
      print "\t/usr/bin/awk \'\{if \(\$2 >= 4\) system\(\"/sbin/iptables -I INPUT -j DROP -s \" \$1\)\}\' /var/log/logrun";
    }
  } else {
    print "/usr/sbin/logrun already in rcS script\n";
  }
  print "I'm copying man file: ";
  system("cp -f ./logrun.8 /usr/share/man/man8/logrun.8");
  system("chmod 644 /usr/share/man/man8/logrun.8") == 0 or print "Can't change /usr/share/man/man8/logrun.8 mode for 644: $!\n\n";
  system("chown root /usr/share/man/man8/logrun.8") == 0 or print "Can't change /usr/share/man/man8/logrun.8 owner for root: $!\n\n";
  system("chgrp root /usr/share/man/man8/logrun.8") == 0 or print "Can't change /usr/share/man/man8/logrun.8 group for root: $!\n\n";
  print "OK\n";
}

print "Starting /usr/sbin/logrun:";
sleep(1);
print ".";
sleep(1);
print ".";
sleep(1);
print ".\n";
if(system("/usr/sbin/logrun") == 0) {
  system("ps ax|grep /usr/sbin/logrun|grep -v grep") == 0 or die "Can't get PID of process: $!\n\n";
  print "\nEverything is OK.\n";
} else {
 print "Can't run /usr/sbin/logrun: $!\n\nRead INSTALL file and install logrun manually.\n\n";
}
